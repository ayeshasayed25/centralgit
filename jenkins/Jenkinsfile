pipeline {
  agent any
  environment {
    S3_BUCKET = "${PROJECT_S3_BUCKET}"
    CLOUDFRONT_ID = "${CLOUDFRONT_DISTRIBUTION_ID}"
  }
  stages {
    stage('Checkout') {
      steps { checkout scm }
    }
    stage('Install Tools') {
      steps {
        sh 'which aws || (pip install --user awscli && export PATH=$PATH:~/.local/bin)'
      }
    }
    stage('Test / Lint') {
      steps {
        sh 'echo "Running basic checks..."'
      }
    }
    stage('Build') {
      steps {
        sh 'echo "No build step for plain static site"'
      }
    }
    stage('Deploy to S3') {
      steps {
        withCredentials([[$class: 'AmazonWebServicesCredentialsBinding', credentialsId: 'aws-creds']]) {
          sh '''
            aws s3 sync website/ s3://$S3_BUCKET/ --delete
            # Example: set Cache-Control for CSS
            aws s3 cp website/css/style.css s3://$S3_BUCKET/css/style.css --cache-control "max-age=31536000"
          '''
        }
      }
    }
    stage('Invalidate CloudFront') {
      steps {
        withCredentials([[$class: 'AmazonWebServicesCredentialsBinding', credentialsId: 'aws-creds']]) {
          sh 'aws cloudfront create-invalidation --distribution-id $CLOUDFRONT_ID --paths "/*"'
        }
      }
    }
  }
  post {
    success { echo "Deployed successfully!" }
    failure { echo "Deployment failed." }
  }
}
